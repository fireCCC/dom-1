{"version":3,"sources":["dom.js"],"names":["window","dom","create","string","container","document","createElement","innerHTML","trim","content","firstChild","after","node","node2","parentNode","insertBefore","nextSibling","before","append","parent","appendChild","wrap","remove","removeChild","empty","array","x","push","attr","name","value","arguments","length","setAttribute","getAttribute","console","log","text","innerText","textContent","html","style","Object","object","key","class","add","className","classList","has","contains","on","eventName","fn","addEventListener","off","removeEventListener","find","selector","scope","querySelectorAll","children","siblings","Array","from","filter","n","next","nodeType","previous","previousSibling","each","nodeList","i","call","index","list"],"mappings":"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","file":"dom.1d0b6d56.js","sourceRoot":"..\\src","sourcesContent":["window.dom = {\r\n    //创建节点\r\n    create(string) {\r\n      //可以用template标签来包裹其他其他html标签\r\n      const container = document.createElement(\"template\");\r\n      container.innerHTML = string.trim();\r\n      return container.content.firstChild;\r\n    },\r\n    //在节点之后插入一个兄弟节点\r\n    after(node, node2) {\r\n      //在节点的下一个兄弟节点之前插入一个节点\r\n      node.parentNode.insertBefore(node2, node.nextSibling);\r\n    },\r\n    //在节点之前插入兄弟节点\r\n    before(node, node2){\r\n      node.parentNode.insertBefore(node2, node);\r\n    },\r\n    //给节点增加一个子节点\r\n    append(parent, node){\r\n      parent.appendChild(node)\r\n    },\r\n    //给节点增加一个父节点\r\n    wrap(node, parent){\r\n      //先在节点之前插入一个兄弟节点，然后将第二个节点作为子节点插入到第一个节点\r\n      dom.before(node, parent)\r\n      dom.append(parent, node)\r\n    },\r\n    //删除节点\r\n    remove(node){\r\n      node.parentNode.removeChild(node)\r\n      return node\r\n    },\r\n    //删除节点的所有子节点\r\n    empty(node){\r\n      //const childNodes = node.childNodes\r\n      //const {childNodes} = node\r\n      //childNodes会在发生改动之后动态变化\r\n      const array = []\r\n      let x = node.firstChild\r\n      while(x){\r\n        array.push(dom.remove(node.firstChild))\r\n        x = node.firstChild\r\n      }\r\n      return array\r\n    },\r\n    // 重载-根据不同参数返回不同结果\r\n    //修改或返回html标签的attribute\r\n    attr(node, name, value){\r\n      if(arguments.length === 3){\r\n        node.setAttribute(name, value)\r\n      }else if(arguments.length === 2){\r\n        return node.getAttribute(name)\r\n      } else {\r\n        console.log(\"error\")\r\n      }\r\n    },\r\n    //修改或返回html标签的text\r\n    text(node, string){ // 适配\r\n      if(arguments.length === 2){\r\n        if('innerText' in node){\r\n          node.innerText = string \r\n        }else{\r\n          node.textContent = string \r\n        }\r\n      }else if(arguments.length === 1){\r\n        if('innerText' in node){\r\n          return node.innerText\r\n        }else{\r\n          return node.textContent\r\n        }\r\n      }\r\n    },\r\n    //修改或返回html标签的内容\r\n    html(node, string){\r\n      if(arguments.length === 2){\r\n        node.innerHTML = string\r\n      }else if(arguments.length === 1){\r\n        return node.innerHTML \r\n      }\r\n    },\r\n    style(node, name, value){\r\n      //node.style[name] name可能为border/color等等变量，不能使用node.style.name\r\n      if(arguments.length===3){\r\n        // dom.style(div, 'color', 'red')\r\n        node.style[name] = value\r\n      }else if(arguments.length===2){\r\n        if(typeof name === 'string'){\r\n          // dom.style(div, 'color')\r\n          return node.style[name]\r\n        }else if(name instanceof Object){\r\n          // dom.style(div, {color: 'red'})\r\n          const object = name\r\n          for(let key in object){\r\n            node.style[key] = object[key]\r\n          }\r\n        }\r\n      }\r\n    },\r\n    class: {\r\n      add(node, className){\r\n        node.classList.add(className)\r\n      },\r\n      remove(node, className){\r\n        node.classList.remove(className)\r\n      },\r\n      has(node, className){\r\n        return node.classList.contains(className)\r\n      }\r\n    },\r\n    //事件监听\r\n    on(node, eventName, fn){\r\n      node.addEventListener(eventName, fn)\r\n    },\r\n    off(node, eventName, fn){\r\n      node.removeEventListener(eventName, fn)\r\n    },\r\n    //查询函数\r\n    find(selector, scope){\r\n      return (scope || document).querySelectorAll(selector)\r\n    },\r\n    parent(node){\r\n      return node.parentNode\r\n    },\r\n    children(node){\r\n      return node.children\r\n    },\r\n    siblings(node){\r\n      return Array.from(node.parentNode.children)\r\n      .filter(n => n !== node)\r\n    },\r\n    next(node){\r\n      let x = node.nextSibling\r\n      //略过文本节点\r\n      while(x && x.nodeType === 3){\r\n        x = x.nextSibling\r\n      }\r\n      return x\r\n    },\r\n    previous(node){\r\n      let x = node.previousSibling\r\n      //略过文本节点\r\n      while(x && x.nodeType === 3){\r\n        x = x.previousSibling\r\n      }\r\n      return x\r\n    },\r\n    each(nodeList, fn){\r\n      for(let i = 0; i < nodeList.length; i++){\r\n        fn.call(null, nodeList[i])\r\n      }\r\n    },\r\n    index(node){\r\n      const list = dom.children(node.parentNode)\r\n      let i\r\n      for(i = 0; i < list.length; i++){\r\n        if(list[i] === node){\r\n          break\r\n        }\r\n      }\r\n      return i\r\n    }\r\n  };"]}